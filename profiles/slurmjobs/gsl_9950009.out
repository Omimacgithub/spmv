slurmstepd: info: Setting TMPDIR to /scratch/9950009. Previous errors about TMPDIR can be discarded
/home/ulc/cursos/curso347/.bashrc: line 26: /opt/xilinx/xrt/setup.sh: No such file or directory
cesga/2020 unloaded
        Preparing the environment for use of the CESGA 2022 software stack.
        Please rebuild modules cache: module --ignore-cache avail
     
cesga/2022 loaded
gcccore/12.3.0 loaded
binutils/2.40 loaded
gcc/12.3.0 loaded

The following have been reloaded with a version change:
  1) cesga/2020 => cesga/2022

gcc (GCC) 12.3.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o timer_g.o timer.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_dense_g.o my_dense.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_csr_g.o my_csr.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O0 -Wall -Wextra  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
--------Results with -O0-------
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 876 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 88 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 99 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 86 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 140 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o timer_g.o timer.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_dense_g.o my_dense.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_csr_g.o my_csr.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O2 -Wall -Wextra  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
-----Results with -O2-novec----
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 399 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 40 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 35 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 87 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o timer_g.o timer.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_dense_g.o my_dense.c
my_dense.c:22:17: optimized: loop vectorized using 32 byte vectors
my_dense.c:22:17: optimized: loop vectorized using 16 byte vectors
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csr_g.o my_csr.c
my_csr.c:27:17: optimized: loop vectorized using 32 byte vectors
my_csr.c:27:17: optimized: loop vectorized using 16 byte vectors
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
--------Results with -O3-------
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 143 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 73 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 36 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 86 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 87 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o timer_g.o timer.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_dense_g.o my_dense.c
my_dense.c:22:17: optimized: loop vectorized using 32 byte vectors
my_dense.c:22:17: optimized: loop vectorized using 16 byte vectors
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csr_g.o my_csr.c
my_csr.c:27:17: optimized: loop vectorized using 32 byte vectors
my_csr.c:27:17: optimized: loop vectorized using 16 byte vectors
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
-------Results with -Ofast-----
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 143 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 72 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 35 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 88 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o timer_g.o timer.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_dense_g.o my_dense.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_csr_g.o my_csr.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O0 -Wall -Wextra  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
--------Results with -O0-------
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 876 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 88 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 99 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 140 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o timer_g.o timer.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_dense_g.o my_dense.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_csr_g.o my_csr.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O2 -Wall -Wextra  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
-----Results with -O2-novec----
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 399 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 39 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 35 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 87 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o timer_g.o timer.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_dense_g.o my_dense.c
my_dense.c:22:17: optimized: loop vectorized using 32 byte vectors
my_dense.c:22:17: optimized: loop vectorized using 16 byte vectors
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csr_g.o my_csr.c
my_csr.c:27:17: optimized: loop vectorized using 32 byte vectors
my_csr.c:27:17: optimized: loop vectorized using 16 byte vectors
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
--------Results with -O3-------
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 143 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 73 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 36 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 87 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o timer_g.o timer.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_dense_g.o my_dense.c
my_dense.c:22:17: optimized: loop vectorized using 32 byte vectors
my_dense.c:22:17: optimized: loop vectorized using 16 byte vectors
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csr_g.o my_csr.c
my_csr.c:27:17: optimized: loop vectorized using 32 byte vectors
my_csr.c:27:17: optimized: loop vectorized using 16 byte vectors
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
-------Results with -Ofast-----
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 143 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 41 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 72 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 36 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 87 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o timer_g.o timer.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_dense_g.o my_dense.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_csr_g.o my_csr.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O0 -Wall -Wextra  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O0 -Wall -Wextra  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
--------Results with -O0-------
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 876 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 88 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 100 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 140 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o timer_g.o timer.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_dense_g.o my_dense.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_csr_g.o my_csr.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O2 -Wall -Wextra  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O2 -Wall -Wextra  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
-----Results with -O2-novec----
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 398 ms Time taken by my dense matrix-vector product (GSL): 399 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 39 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 35 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 87 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o timer_g.o timer.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_dense_g.o my_dense.c
my_dense.c:22:17: optimized: loop vectorized using 32 byte vectors
my_dense.c:22:17: optimized: loop vectorized using 16 byte vectors
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csr_g.o my_csr.c
my_csr.c:27:17: optimized: loop vectorized using 32 byte vectors
my_csr.c:27:17: optimized: loop vectorized using 16 byte vectors
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -O3 -march=native -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
--------Results with -O3-------
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 399 ms Time taken by my dense matrix-vector product (GSL): 142 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 73 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 36 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 87 ms Result is ok!
rm -f timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o timer.o my_dense.o my_csr.o my_coo.o my_csc.o spmv.o gsl mkl *~
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o timer_g.o timer.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_dense_g.o my_dense.c
my_dense.c:22:17: optimized: loop vectorized using 32 byte vectors
my_dense.c:22:17: optimized: loop vectorized using 16 byte vectors
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csr_g.o my_csr.c
my_csr.c:27:17: optimized: loop vectorized using 32 byte vectors
my_csr.c:27:17: optimized: loop vectorized using 16 byte vectors
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_coo_g.o my_coo.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o my_csc_g.o my_csc.c
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ -c -o spmv_g.o spmv.c
spmv.c: In function ‘main’:
spmv.c:252:3: warning: implicit declaration of function ‘gsl_spblas_dgemv’; did you mean ‘cblas_dgemv’? [-Wimplicit-function-declaration]
  252 |   gsl_spblas_dgemv(CblasNoTrans, 1.0, m, x, 0.0, y);
      |   ^~~~~~~~~~~~~~~~
      |   cblas_dgemv
gcc -Ofast -march=native -mtune=icelake-server -Wall -Wextra -fopt-info-vec-optimized -ffast-math  -D_GSL_ timer_g.o my_dense_g.o my_csr_g.o my_coo_g.o my_csc_g.o spmv_g.o -lm -lgsl -lgslcblas -o gsl
-------------------------------
-------Results with -Ofast-----
-------------------------------
Matriz size: 16384 x 16384 (268435456 elements) 26837519 non-zero elements (10.00%) Dense computation ---------------- Time taken by CBLAS (GSL) dense computation: 399 ms Time taken by my dense matrix-vector product (GSL): 142 ms Result is ok! Time taken by GSL (CSR) sparse matrix - vector product: 40 ms Result is ok! Time taken by my csr matrix (GSL) - vector product: 72 ms Result is ok! Time taken by GSL (CSC) sparse matrix - vector product: 36 ms Result is ok! Time taken by my csc matrix (GSL) - vector product: 36 ms Result is ok! Time taken by GSL (COO) sparse matrix - vector product: 87 ms Result is ok! Time taken by my coo matrix (GSL) - vector product: 88 ms Result is ok!
------------------------
-----------O0-----------
------------------------
Mean time for CBLAS (GSL) dense computation: 398.00 ms
------------------------
-----------O2-----------
------------------------
Mean time for CBLAS (GSL) dense computation: 398.00 ms
------------------------
-----------O3-----------
------------------------
Mean time for CBLAS (GSL) dense computation: 398.33 ms
------------------------
---------fast-----------
------------------------
Mean time for CBLAS (GSL) dense computation: 398.33 ms
------------------------
-----------O0-----------
------------------------
Mean time for my dense matrix-vector product (GSL): 876.00 ms
------------------------
-----------O2-----------
------------------------
Mean time for my dense matrix-vector product (GSL): 399.00 ms
------------------------
-----------O3-----------
------------------------
Mean time for my dense matrix-vector product (GSL): 142.66 ms
------------------------
---------fast-----------
------------------------
Mean time for my dense matrix-vector product (GSL): 142.66 ms
------------------------
-----------O0-----------
------------------------
Mean time for GSL (CSR) sparse matrix - vector product: 40.00 ms
------------------------
-----------O2-----------
------------------------
Mean time for GSL (CSR) sparse matrix - vector product: 40.00 ms
------------------------
-----------O3-----------
------------------------
Mean time for GSL (CSR) sparse matrix - vector product: 40.00 ms
------------------------
---------fast-----------
------------------------
Mean time for GSL (CSR) sparse matrix - vector product: 40.33 ms
------------------------
-----------O0-----------
------------------------
Mean time for my csr matrix (GSL) - vector product: 88.00 ms
------------------------
-----------O2-----------
------------------------
Mean time for my csr matrix (GSL) - vector product: 39.33 ms
------------------------
-----------O3-----------
------------------------
Mean time for my csr matrix (GSL) - vector product: 73.00 ms
------------------------
---------fast-----------
------------------------
Mean time for my csr matrix (GSL) - vector product: 72.00 ms
------------------------
-----------O0-----------
------------------------
Mean time for GSL (CSC) sparse matrix - vector product: 36.00 ms
------------------------
-----------O2-----------
------------------------
Mean time for GSL (CSC) sparse matrix - vector product: 36.00 ms
------------------------
-----------O3-----------
------------------------
Mean time for GSL (CSC) sparse matrix - vector product: 36.00 ms
------------------------
---------fast-----------
------------------------
Mean time for GSL (CSC) sparse matrix - vector product: 36.00 ms
------------------------
-----------O0-----------
------------------------
Mean time for my csc matrix (GSL) - vector product: 99.33 ms
------------------------
-----------O2-----------
------------------------
Mean time for my csc matrix (GSL) - vector product: 35.00 ms
------------------------
-----------O3-----------
------------------------
Mean time for my csc matrix (GSL) - vector product: 36.00 ms
------------------------
---------fast-----------
------------------------
Mean time for my csc matrix (GSL) - vector product: 35.66 ms
------------------------
-----------O0-----------
------------------------
Mean time for GSL (COO) sparse matrix - vector product: 86.66 ms
------------------------
-----------O2-----------
------------------------
Mean time for GSL (COO) sparse matrix - vector product: 87.00 ms
------------------------
-----------O3-----------
------------------------
Mean time for GSL (COO) sparse matrix - vector product: 86.66 ms
------------------------
---------fast-----------
------------------------
Mean time for GSL (COO) sparse matrix - vector product: 87.00 ms
------------------------
-----------O0-----------
------------------------
Mean time for my coo matrix (GSL) - vector product: 140.00 ms
------------------------
-----------O2-----------
------------------------
Mean time for my coo matrix (GSL) - vector product: 87.00 ms
------------------------
-----------O3-----------
------------------------
Mean time for my coo matrix (GSL) - vector product: 87.00 ms
------------------------
---------fast-----------
------------------------
Mean time for my coo matrix (GSL) - vector product: 87.66 ms

*****************************************************************************
*                                                                           *
*                    JOB EFFICIENCY REPORT (seff 9950009)                   *
*                                                                           *
*****************************************************************************

Job ID: 9950009
Cluster: finisterrae3
User/Group: curso347/ulc
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 64
CPU Utilized: 00:03:28
CPU Efficiency: 1.53% of 03:47:12 core-walltime
Job Wall-clock time: 00:03:33
Memory Utilized: 3.50 GB
Memory Efficiency: 43.79% of 8.00 GB

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 ++   Memory Efficiency is too small. Please review the requested memory. ++
 ++ It seems that you do not need that much memory so we recommend        ++
 ++ requesting less memory in other similar jobs.                         ++
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 
*****************************************************************************

